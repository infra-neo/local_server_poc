version: '3.8'

# Pre-Produccion Stack con Headscale como Red Perimetral
# Dominios: hs.kappa4.com (Headscale UI), gate.kappa4.com (Nginx/Authentik)

services:
  # ===========================================================================
  # HEADSCALE - Red Perimetral y Coordinador VPN
  # ===========================================================================
  headscale:
    image: headscale/headscale:latest
    container_name: headscale-server
    command: serve
    environment:
      - HEADSCALE_SERVER_URL=https://hs.kappa4.com
      - HEADSCALE_LISTEN_ADDR=0.0.0.0:8080
      - HEADSCALE_METRICS_LISTEN_ADDR=0.0.0.0:9090
      - HEADSCALE_GRPC_LISTEN_ADDR=0.0.0.0:50443
      - HEADSCALE_PRIVATE_KEY_PATH=/etc/headscale/private.key
      - HEADSCALE_NOISE_PRIVATE_KEY_PATH=/etc/headscale/noise_private.key
      - HEADSCALE_DB_TYPE=sqlite3
      - HEADSCALE_DB_PATH=/var/lib/headscale/db.sqlite
      - HEADSCALE_EPHEMERAL_NODE_INACTIVITY_TIMEOUT=30m
      - HEADSCALE_DERP_AUTO_UPDATE_ENABLED=true
      - HEADSCALE_LOG_LEVEL=info
    volumes:
      - headscale_config:/etc/headscale
      - headscale_data:/var/lib/headscale
      - ./headscale/config.yaml:/etc/headscale/config.yaml:ro
    networks:
      - headscale-net
    ports:
      - "8080:8080"   # HTTP
      - "9090:9090"   # Metrics
      - "50443:50443" # gRPC
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Headscale UI - Interfaz de administraci贸n
  headscale-ui:
    image: ghcr.io/gurucomputing/headscale-ui:latest
    container_name: headscale-ui
    environment:
      - HEADSCALE_URL=http://headscale:8080
      - SCRIPT_NAME=/admin
    networks:
      - headscale-net
    restart: unless-stopped
    depends_on:
      - headscale

  # ===========================================================================
  # BASE DE DATOS Y CACHE
  # ===========================================================================
  postgres:
    image: postgres:15-alpine
    container_name: kolaboree-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kolaboree}
      POSTGRES_USER: ${POSTGRES_USER:-kolaboree}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-CHANGEME_SECURE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./guacamole/initdb.d:/docker-entrypoint-initdb.d:ro
    networks:
      - headscale-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kolaboree}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: kolaboree-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-CHANGEME_REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - headscale-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================================================
  # LDAP - Directorio de Usuarios
  # ===========================================================================
  openldap:
    image: osixia/openldap:1.5.0
    container_name: kolaboree-ldap
    environment:
      LDAP_ORGANISATION: "Kolaboree"
      LDAP_DOMAIN: ${LDAP_ROOT:-kolaboree.local}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD:-CHANGEME_LDAP_PASSWORD}
      LDAP_CONFIG_PASSWORD: ${LDAP_ADMIN_PASSWORD:-CHANGEME_LDAP_PASSWORD}
      LDAP_READONLY_USER: "false"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:+SECURE128:-VERS-TLS-ALL:+VERS-TLS1.2:-RSA:-DHE-DSS:-CAMELLIA-128-CBC:-CAMELLIA-256-CBC"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
      - ./ldap/initial-data.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/initial-data.ldif:ro
    networks:
      - headscale-net
    restart: unless-stopped
    ports:
      - "${LDAP_PORT:-389}:389"
      - "${LDAPS_PORT:-636}:636"

  # ===========================================================================
  # AUTHENTIK - Sistema de Autenticaci贸n y SSO
  # ===========================================================================
  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    container_name: kolaboree-authentik-server
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_REDIS__PASSWORD: ${REDIS_PASSWORD:-CHANGEME_REDIS_PASSWORD}
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB:-kolaboree}
      AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER:-kolaboree}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD:-CHANGEME_SECURE_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:-CHANGEME_AUTHENTIK_SECRET_KEY_MIN_50_CHARS}
      AUTHENTIK_ERROR_REPORTING__ENABLED: ${AUTHENTIK_ERROR_REPORTING:-false}
      
      # Configuraci贸n de dominio
      AUTHENTIK_HOST: gate.kappa4.com
      AUTHENTIK_PUBLIC_URL: https://gate.kappa4.com
      AUTHENTIK_WEB__ALLOWED_ORIGINS: https://gate.kappa4.com
      AUTHENTIK_CORS__ALLOWED_ORIGINS: https://gate.kappa4.com
      AUTHENTIK_WEB__TRUST_X_FORWARDED_FOR: true
      AUTHENTIK_WEB__SECURE_PROXY_SSL_HEADER: HTTP_X_FORWARDED_PROTO,https
      AUTHENTIK_LOG_LEVEL: info
    expose:
      - "9000"
      - "9443"
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
      - ./authentik/branding:/media/branding:ro
    networks:
      - headscale-net
    depends_on:
      - postgres
      - redis
      - openldap
    restart: unless-stopped

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: kolaboree-authentik-worker
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_REDIS__PASSWORD: ${REDIS_PASSWORD:-CHANGEME_REDIS_PASSWORD}
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB:-kolaboree}
      AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER:-kolaboree}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD:-CHANGEME_SECURE_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:-CHANGEME_AUTHENTIK_SECRET_KEY_MIN_50_CHARS}
      AUTHENTIK_ERROR_REPORTING__ENABLED: ${AUTHENTIK_ERROR_REPORTING:-false}
      
      AUTHENTIK_HOST: gate.kappa4.com
      AUTHENTIK_PUBLIC_URL: https://gate.kappa4.com
      AUTHENTIK_LOG_LEVEL: info
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
      - authentik_certs:/certs
      - ./authentik/branding:/media/branding:ro
    networks:
      - headscale-net
    depends_on:
      - postgres
      - redis
      - openldap
    restart: unless-stopped

  # ===========================================================================
  # GUACAMOLE - HTML5 Remote Desktop (RAC)
  # ===========================================================================
  guacd:
    image: guacamole/guacd:latest
    container_name: kolaboree-guacd
    networks:
      - headscale-net
    restart: unless-stopped

  guacamole:
    image: guacamole/guacamole:latest
    container_name: kolaboree-guacamole
    environment:
      GUACD_HOSTNAME: guacd
      GUACD_PORT: 4822
      POSTGRESQL_HOSTNAME: postgres
      POSTGRESQL_PORT: 5432
      POSTGRESQL_DATABASE: ${POSTGRES_DB:-kolaboree}
      POSTGRESQL_USER: ${POSTGRES_USER:-kolaboree}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD:-CHANGEME_SECURE_PASSWORD}
      POSTGRESQL_SSL_MODE: disable
      
      # OAuth2/OIDC para Authentik
      OPENID_AUTHORIZATION_ENDPOINT: "https://gate.kappa4.com/application/o/authorize/"
      OPENID_JWKS_ENDPOINT: "https://gate.kappa4.com/application/o/guacamole/jwks/"
      OPENID_ISSUER: "https://gate.kappa4.com/application/o/guacamole/"
      OPENID_CLIENT_ID: ${GUACAMOLE_OIDC_CLIENT_ID:-guacamole-rac-client}
      OPENID_CLIENT_SECRET: ${GUACAMOLE_OIDC_CLIENT_SECRET}
      OPENID_REDIRECT_URI: "https://gate.kappa4.com/guacamole/"
      OPENID_USERNAME_CLAIM_TYPE: "preferred_username"
      OPENID_GROUPS_CLAIM_TYPE: "groups"
      OPENID_SCOPE: "openid profile email groups"
      OPENID_ENABLED: "true"
      
      # Header Authentication
      HTTP_AUTH_HEADER: "X-AUTHENTIK-USERNAME"
      HTTP_AUTH_NAME_ATTRIBUTE: "username"
      HTTP_AUTH_EMAIL_ATTRIBUTE: "email"
      HTTP_AUTH_AUTO_CREATE_USER: "true"
      
      # LDAP para validaci贸n de usuarios
      LDAP_HOSTNAME: "openldap"
      LDAP_PORT: "389"
      LDAP_ENCRYPTION_METHOD: "none"
      LDAP_USER_BASE_DN: "ou=users,dc=kolaboree,dc=local"
      LDAP_USERNAME_ATTRIBUTE: "uid"
      LDAP_MEMBER_ATTRIBUTE: "member"
      LDAP_USER_SEARCH_FILTER: "(objectClass=inetOrgPerson)"
      LDAP_GROUP_BASE_DN: "ou=groups,dc=kolaboree,dc=local"
      LDAP_GROUP_SEARCH_FILTER: "(objectClass=groupOfNames)"
      LDAP_BIND_DN: "cn=admin,dc=kolaboree,dc=local"
      LDAP_BIND_PASSWORD: ${LDAP_ADMIN_PASSWORD:-CHANGEME_LDAP_PASSWORD}
      EXTENSION_PRIORITY: "header,openid,ldap,*"
    expose:
      - "8080"
    networks:
      - headscale-net
    depends_on:
      - postgres
      - guacd
      - authentik-server
    restart: unless-stopped

  # ===========================================================================
  # NGINX - Reverse Proxy y Punto de Entrada
  # ===========================================================================
  nginx:
    image: nginx:alpine
    container_name: kolaboree-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - headscale-net
    depends_on:
      - authentik-server
      - guacamole
      - headscale
      - headscale-ui
    restart: unless-stopped

  # ===========================================================================
  # AUTHENTIK RAC OUTPOST - Proxy para TSPlus
  # ===========================================================================
  authentik-outpost:
    image: ghcr.io/goauthentik/rac:latest
    container_name: kolaboree-authentik-outpost
    environment:
      AUTHENTIK_HOST: http://authentik-server:9000
      AUTHENTIK_HOST_BROWSER: https://gate.kappa4.com
      AUTHENTIK_TOKEN: ${AUTHENTIK_OUTPOST_TOKEN}
      AUTHENTIK_INSECURE: ${AUTHENTIK_INSECURE:-false}
      AUTHENTIK_LOG_LEVEL: info
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: true
      
      # Configuraci贸n para acceso a TSPlus via Headscale
      TSPLUS_ENDPOINT: ${TSPLUS_ENDPOINT:-201.151.150.226}
      TSPLUS_PORT: ${TSPLUS_PORT:-3389}
    networks:
      - headscale-net
    depends_on:
      - authentik-server
      - headscale
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - NET_RAW

volumes:
  headscale_config:
    driver: local
  headscale_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ldap_data:
    driver: local
  ldap_config:
    driver: local
  authentik_media:
    driver: local
  authentik_templates:
    driver: local
  authentik_certs:
    driver: local

networks:
  headscale-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
