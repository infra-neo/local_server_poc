#!/bin/bash

echo "🚀 IMPLEMENTACIÓN RAC PROVIDER - PASO A PASO"
echo "=============================================="
echo ""
echo "✅ ESTRATEGIA CONFIRMADA: Híbrida (sin romper nada existente)"
echo ""

echo "📋 CHECKLIST PRE-IMPLEMENTACIÓN:"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "✅ Authentik funcionando: https://34.68.124.46:9443"
echo "✅ Guacamole funcionando: http://34.68.124.46:8080/guacamole/"
echo "✅ Usuario admin: akadmin / Neogenesys123!!!"
echo "✅ Usuario LDAP: soporte@kolaboree.local / Neo123!!!"
echo "✅ 7 conexiones actuales identificadas"
echo ""

echo "🎯 OBJETIVO: Crear acceso SSO paralelo sin afectar el actual"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "DESPUÉS DE LA IMPLEMENTACIÓN TENDRÁS:"
echo ""
echo "🔵 MÉTODO ACTUAL (sin cambios):"
echo "   • URL: http://34.68.124.46:8080/guacamole/"
echo "   • Login individual en Guacamole"
echo "   • 7 conexiones existentes intactas"
echo ""
echo "🟢 MÉTODO NUEVO (RAC Provider):"
echo "   • URL: https://34.68.124.46:9443/if/user/"
echo "   • Login único con LDAP (soporte@kolaboree.local)"
echo "   • 4 conexiones principales vía SSO"
echo "   • HTML5 garantizado"
echo "   • Escalable para más usuarios"
echo ""

echo "📝 PASOS A SEGUIR AHORA:"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "PASO 1: ABRIR AUTHENTIK ADMIN"
echo "   1. Ve a: https://34.68.124.46:9443/if/admin/"
echo "   2. Login: akadmin / Neogenesys123!!!"
echo "   3. Confirma que estás en el panel de administración"
echo ""

echo "PASO 2: CREAR RAC PROVIDER"
echo "   1. En el menú izquierdo: Applications → Providers"
echo "   2. Haz clic en el botón 'Create' (esquina superior derecha)"
echo "   3. Selecciona 'RAC Provider' de la lista"
echo "   4. Configura:"
echo "      • Name: Remote Access Provider"
echo "      • Authorization flow: default-authorization-flow"
echo "      • Connection expiry: hours=24"
echo "      • Delete failing connections: ✅ MARCADO"
echo "   5. Haz clic en 'Create'"
echo ""

echo "PASO 3: CREAR APLICACIÓN"
echo "   1. Ve a: Applications → Applications"
echo "   2. Haz clic en 'Create'"
echo "   3. Configura:"
echo "      • Name: Remote Desktop Access"
echo "      • Slug: remote-desktop-access"
echo "      • Provider: Remote Access Provider (el que acabas de crear)"
echo "      • Launch URL: (dejar vacío)"
echo "      • Open in new tab: ✅ MARCADO"
echo "   4. Haz clic en 'Create'"
echo ""

echo "PASO 4: CONFIGURAR ENDPOINTS (AQUÍ USARÁS TUS IPs REALES)"
echo "   1. Ve a: Applications → Providers"
echo "   2. Haz clic en 'Remote Access Provider'"
echo "   3. Ve a la pestaña 'Endpoints'"
echo "   4. Crea estos 4 endpoints:"
echo ""

echo "   📍 ENDPOINT 1 - Windows Production:"
echo "      • Name: Windows Production Server"
echo "      • Host: 100.95.223.18"
echo "      • Protocol: RDP"
echo "      • Haz clic en 'Show advanced' y configura:"
echo "        - Port: 3389"
echo "        - Width: 1920"
echo "        - Height: 1080"
echo "        - Color depth: 32"
echo "        - Username: soporte"
echo "        - Password: Neo123!!!"
echo ""

echo "   📍 ENDPOINT 2 - Windows Server Demo:"
echo "      • Name: Windows Server Demo"
echo "      • Host: 192.168.1.100"
echo "      • Protocol: RDP"
echo "      • Settings básicos:"
echo "        - Port: 3389"
echo "        - Username: administrator"
echo "        - Password: [tu password de administrator]"
echo ""

echo "   📍 ENDPOINT 3 - Ubuntu Server SSH:"
echo "      • Name: Ubuntu Server SSH"
echo "      • Host: 192.168.1.102"
echo "      • Protocol: SSH"
echo "      • Settings:"
echo "        - Port: 22"
echo "        - Username: admin"
echo "        - Password: [tu password de admin]"
echo ""

echo "   📍 ENDPOINT 4 - Linux Desktop VNC:"
echo "      • Name: Linux Desktop VNC"
echo "      • Host: 192.168.1.101"
echo "      • Protocol: VNC"
echo "      • Settings:"
echo "        - Port: 5901"
echo "        - Password: [tu password de VNC]"
echo ""

echo "PASO 5: CONFIGURAR OUTPOST"
echo "   1. Ve a: Applications → Outposts"
echo "   2. Busca 'authentik Embedded Outpost' y haz clic para editarlo"
echo "   3. En la sección 'Applications', agrega: 'Remote Desktop Access'"
echo "   4. Cambia el Type a: 'RAC'"
echo "   5. Guarda los cambios"
echo ""

echo "PASO 6: PROBAR EL SISTEMA"
echo "   1. Abre una nueva ventana de incógnito"
echo "   2. Ve a: https://34.68.124.46:9443/if/user/"
echo "   3. Login: soporte@kolaboree.local / Neo123!!!"
echo "   4. Deberías ver 'Remote Desktop Access' en tu dashboard"
echo "   5. Haz clic en la aplicación"
echo "   6. Deberías ver los 4 endpoints disponibles"
echo "   7. Prueba conectarte al 'Windows Production Server'"
echo ""

echo "🔧 COMANDOS DE VERIFICACIÓN MIENTRAS CONFIGURAS:"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "Para verificar que todo sigue funcionando:"
echo ""
echo "# Verificar estado de servicios:"
echo "docker-compose ps"
echo ""
echo "# Verificar logs de Authentik:"
echo "docker logs kolaboree-authentik-server --tail=20"
echo ""
echo "# Verificar que Guacamole sigue funcionando:"
echo "curl -s -o /dev/null -w \"Status: %{http_code}\n\" http://34.68.124.46:8080/guacamole/"
echo ""

echo "⚠️  NOTAS IMPORTANTES:"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "• Si algo sale mal, tus conexiones actuales siguen funcionando"
echo "• Los passwords de los endpoints se almacenan de forma segura"
echo "• Puedes modificar/eliminar endpoints sin afectar Guacamole"
echo "• El usuario 'soporte' funcionará tanto en RAC como en Guacamole directo"
echo ""

echo "🎉 RESULTADO ESPERADO:"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "✅ HTML5: SÍ, funciona vía navegador"
echo "✅ Dinámico: SÍ, escalable para más usuarios"
echo "✅ SSO: Un login → acceso a todas las conexiones"
echo "✅ Sin interrupciones: Sistema actual intacto"
echo ""

echo "🚀 ¡COMIENZA AHORA!"
echo "Ve a: https://34.68.124.46:9443/if/admin/"
echo "Y sigue los pasos detallados arriba"
echo ""
echo "Tiempo estimado: 15-20 minutos"